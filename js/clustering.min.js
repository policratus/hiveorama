function handleFile(e){var t=e.target.files;var n=t[0];if(n.size/Math.pow(1024,2)>1){alert("This file size exceeds 1MB. Please, choose a smaller sample.")}else{try{loadTextArea(n)}catch(r){var i="There was an error on loading this file.\n";i+="Please, load a file with well-formed CSV format specification.";alert(i)}}}function loadTextArea(e){var t=new FileReader;t.readAsText(e);t.onload=function(e){try{var t=e.target.result;var n=$.csv.toArrays(t);for(var r in n){document.getElementById("dataarea").value=n.join("\n")}}catch(i){var s="There was an error on loading this file.\n";s+="Please, load a file with well-formed CSV format specification.\n";s+="Here, the error description: "+i;alert(s)}}}function updateSample(e){var t=document.getElementById("dataarea");t.value=datatocluster[e]}function selectNumberofClusters(e){selectedNumberofClusters=e}function openClusters(){if(document.getElementById("dataarea").value==""){alert('Well... it\'s impossible to cluster "The Void". Try to put something to cluster!')}else{var e=parseData(document.getElementById("dataarea").value,"textarea");var t=e["vectors"];var n=e["labels"];var r=parseInt(selectedNumberofClusters);try{var i=figue.kmeans(r,t)}catch(s){var o="Opsss. Something gone wrong.\n";o+=" Please, verify if the loaded file is a well-formed CSV.";alert(o)}var u="";var a=[];clearClusterDrops();if(i){a=i.assignments.unique();var f=document.getElementById("clusterDrops");for(var l=0;g=a.length,l<g;l++){var c=document.createElement("option");c.text="Cluster: "+a[l];if(a[l]==0){f.add(c,null)}else{f.add(c,a[l]-1)}}f.style.visibility="visible";document.getElementById("dataarea").innerHTML="";globalClusters=i;globalLabels=n;globalVectors=t;$("#resultSection").animate({height:"550px"},1e3,function(){drawTable(0);showResults(true)})}else{u="Perhaps the file you loaded is not a well-formed CSV,\n";u+=" or too many clusters/too few different instances\n";u+=" (try changing).";alert(u);document.getElementById("clusterDrops").style.visibility="hidden"}}}function clearClusterDrops(){var e=document.getElementById("clusterDrops");if(e.options.length!=0){for(var t=e.options.length;t>=0;t--){e.remove(t)}}}function buttonTracking(e){switch(e){case"kmeans":_gaq.push(["_trackEvent","Clustering App","Click","Cluster it!"]);break;default:break}}function drawTable(e){var t=new google.visualization.DataTable;t.addColumn("string","Label");for(var n=0;n<globalVectors[0].length;n++){t.addColumn("number","Value "+n)}for(var r=0;r<globalClusters.assignments.length;r++){auxArray=[];if(globalClusters.assignments[r]==e){auxArray.push(globalLabels[r]);for(var i=0;i<globalVectors[r].length;i++){auxArray.push(parseFloat(globalVectors[r][i].toFixed(2)))}t.addRows([auxArray])}}var s=document.getElementById("table_div");var o=new google.visualization.Table(s);o.clearChart();$("#table_div").height("450px");o.draw(t,{width:"99%",page:"enable",pageSize:10,showRowNumber:false})}function showResults(e){var t=document.getElementById("results");var n=document.getElementById("titleClusterSel");var r=document.getElementById("divider");var i=document.getElementById("clusterDrops");var s=document.getElementById("dataarea");if(e){t.innerHTML="";n.innerHTML="";r.style.visibility="visible";spanClose.style.visibility="visible";var o=document.createElement("p");var u=document.createTextNode("Results");t.appendChild(u);var o=document.createElement("p");var u=document.createTextNode("Select the cluster: ");n.appendChild(u)}else{t.innerHTML="";n.innerHTML="";r.style.visibility="hidden";spanClose.style.visibility="hidden";i.style.visibility="hidden";var a=document.getElementById("table_div");var f=new google.visualization.Table(a);f.clearChart();$("#table_div").height("0px");s.value=""}}var selectedNumberofClusters=2;var globalClusters,globalLabels,globalVectors=[];$(document).ready(function(){if(isAPIAvailable()){$("#filesClustering").bind("change",handleFile)}})